{"version":3,"sources":["Block.js","Txhash.js","LatestBlock.js","App.js","serviceWorker.js","index.js"],"names":["App","props","get","axios","state","hash","then","response","setState","data","nextblock","next_block","slice","length","tx","show","catch","error","className","style","width","margin","onChange","e","target","value","type","placeholder","aria-label","aria-describedby","onClick","id","this","textAlign","fontWeight","bits","block_index","fee","undefined","height","JSON","stringify","main_chain","mrkl_root","n_tx","nonce","prev_block","received_time","relayed_by","size","time","ver","scope","map","val","ind","key","lock_time","tx_index","vin_sz","vout_sz","weight","React","Component","console","log","out","tx2","inputs","block_height","double_spend","script","addr","n","spent","sequence","prev_out","txIndexes","datalength","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","Block","Txhash","LatestBlock","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65d43ec4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      nextblock: \"\",\n      tx: [],\n      hash: \"\",\n      show: false\n    };\n  }\n\n  get = () => {\n    axios\n      .get(`https://blockchain.info/rawblock/${this.state.hash}?cors=true`)\n      .then(response => {\n        this.setState({\n          data: response.data,\n          nextblock:\n            response.data.next_block[0].slice(0, 4) +\n            \"...\" +\n            response.data.next_block[0].slice(\n              response.data.next_block[0].length - 4,\n              response.data.next_block[0].length\n            ),\n          tx: response.data.tx,\n          show: true\n        });\n      })\n      .catch(error => {\n        this.setState({\n          data: {},\n          nextblock: \"\",\n          tx: [],\n          hash: \"\",\n          show: false\n        });\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\" style={{ width: \"90%\", margin: \"0 auto\" }}>\n        <div style={{ margin: \"5% 0%\" }}>\n          <div className=\"input-group mb-3\">\n            <input\n              onChange={e => this.setState({ hash: e.target.value })}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Raw Hash\"\n              aria-label=\"Enter Raw Hash\"\n              aria-describedby=\"button-addon2\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                onClick={() => {\n                  this.get();\n                }}\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                id=\"button-addon2\"\n              >\n                Get Details\n              </button>\n            </div>{\" \"}\n          </div>\n\n          {this.state.show ? (\n            <div className=\"row\">\n              <div className=\"col-md-4 col-sm-12\">\n                <div style={{ textAlign: \"left\" }}>\n                  <h3>Raw Block</h3>\n                </div>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}>Bits</span>\n                    <span>{this.state.data.bits}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Block Index</span>\n                    <span>{this.state.data.block_index}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Fee</span>\n                    <span>{this.state.data.fee}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Hash</span>\n                    {this.state.data.hash !== undefined ? (\n                      <span>\n                        {this.state.data.hash.slice(0, 4)}...\n                        {this.state.data.hash.slice(\n                          this.state.data.hash.length - 4,\n                          this.state.data.hash.length\n                        )}\n                      </span>\n                    ) : (\n                      <span />\n                    )}\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Height</span>\n                    <span>{this.state.data.height}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Main Chain</span>\n                    <span>{JSON.stringify(this.state.data.main_chain)}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> MRKL Root</span>\n                    {this.state.data.mrkl_root !== undefined ? (\n                      <span>\n                        {this.state.data.mrkl_root.slice(0, 4)}...\n                        {this.state.data.mrkl_root.slice(\n                          this.state.data.mrkl_root.length - 4,\n                          this.state.data.mrkl_root.length\n                        )}\n                      </span>\n                    ) : (\n                      <span />\n                    )}\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> N TX</span>\n                    <span>{this.state.data.n_tx}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Next Block</span>\n                    <span>{this.state.nextblock}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Data Nonce</span>\n                    <span>{this.state.data.nonce}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Previous Block</span>\n                    {this.state.data.prev_block !== undefined ? (\n                      <span>\n                        {this.state.data.prev_block.slice(0, 4)}...\n                        {this.state.data.prev_block.slice(\n                          this.state.data.prev_block.length - 4,\n                          this.state.data.prev_block.length\n                        )}\n                      </span>\n                    ) : (\n                      <span />\n                    )}\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Received Time</span>\n                    <span>{this.state.data.received_time}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Relayed By</span>\n                    <span>{this.state.data.relayed_by}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Size</span>\n                    <span>{this.state.data.size}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Time</span>\n                    <span>{this.state.data.time}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Ver</span>\n                    <span>{this.state.data.ver}</span>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-8 col-sm-12\">\n                <div style={{ textAlign: \"left\" }}>\n                  <h3>TX</h3>\n                </div>\n                <table className=\"table\">\n                  <thead className=\"thead-dark\">\n                    <tr><th scope=\"col\">Hash</th>\n                      <th scope=\"col\">Lock Time</th>\n                      <th scope=\"col\">Relayed By</th>\n                      <th scope=\"col\">Size</th>\n                      <th scope=\"col\">Time</th>\n                      <th scope=\"col\">TX Index</th>\n                      <th scope=\"col\">Ver</th>\n                      <th scope=\"col\">Vin SZ</th>\n                      <th scope=\"col\">Vout SZ</th>\n                      <th scope=\"col\">Weight</th></tr>\n                  </thead>\n                  {this.state.tx.length > 0 ? (\n                    <tbody>\n                      {this.state.tx.map((val, ind) => {\n                        return (\n                          <tr key={ind}><th>\n                              {val.hash.slice(0, 4) +\n                                \"...\" +\n                                val.hash.slice(\n                                  val.hash.length - 4,\n                                  val.hash.length\n                                )}\n                            </th>\n                            <td>{val.lock_time}</td>\n                            <td>{val.relayed_by}</td>\n                            <td>{val.size}</td>\n                            <td>{val.time}</td>\n                            <td>{val.tx_index}</td>\n                            <td>{val.ver}</td>\n                            <td>{val.vin_sz}</td>\n                            <td>{val.vout_sz}</td>\n                            <td>{val.weight}</td></tr>\n                        );\n                      })}\n                    </tbody>\n                  ) : (\n                    \"\"\n                  )}\n                </table>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      nextblock: \"\",\n      tx: [],\n      tx2: [],\n      hash: \"\",\n      show: false\n    };\n  }\n\n  get = () => {\n    axios\n      .get(`https://blockchain.info/rawtx/${this.state.hash}?cors=true`)\n      .then(response => {\n        console.log(response);\n        this.setState({\n          data: response.data,\n          show: true,\n          tx: response.data.out,\n          tx2: response.data.inputs\n        });\n      })\n      .catch(error => {\n        this.setState({\n          data: {},\n          tx: [],\n          tx2: [],\n          show: false\n        });\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\" style={{ width: \"90%\", margin: \"0 auto\" }}>\n        <div style={{ margin: \"5% 0%\" }}>\n          <div className=\"input-group mb-3\">\n            <input\n              onChange={e => this.setState({ hash: e.target.value })}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter TX Hash\"\n              aria-label=\"Enter TX Hash\"\n              aria-describedby=\"button-addon2\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                onClick={() => {\n                  this.get();\n                }}\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                id=\"button-addon2\"\n              >\n                Get Details\n              </button>\n            </div>{\" \"}\n          </div>\n\n          {this.state.show ? (\n            <div className=\"row\">\n              <div className=\"col-md-4 col-sm-12\">\n                <div style={{ textAlign: \"left\" }}>\n                  <h3>Raw TX</h3>\n                </div>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}>Block Height</span>\n                    <span>{this.state.data.block_height}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Block Index</span>\n                    <span>{this.state.data.block_index}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Double Spend</span>\n                    <span>{this.state.data.double_spend}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Hash</span>\n                    {this.state.data.hash !== undefined ? (\n                      <span>\n                        {this.state.data.hash.slice(0, 4)}...\n                        {this.state.data.hash.slice(\n                          this.state.data.hash.length - 4,\n                          this.state.data.hash.length\n                        )}\n                      </span>\n                    ) : (\n                      <span />\n                    )}\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Lock Time</span>\n                    <span>{this.state.data.lock_time}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Relayed By</span>\n                    <span>{JSON.stringify(this.state.data.relayed_by)}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Size</span>\n                    <span>{this.state.data.size}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}>Tx Index</span>\n                    <span>{this.state.data.tx_index}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}>Ver</span>\n                    <span>{this.state.data.ver}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Vin SZ</span>\n                    <span>{this.state.data.vin_sz}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Vout SZ</span>\n                    <span>{this.state.data.vout_sz}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Weight</span>\n                    <span>{this.state.data.weight}</span>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-8 col-sm-12\">\n                <div style={{ textAlign: \"left\" }}>\n                  <h3>Out</h3>\n                </div>\n                <table className=\"table\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Script</th>\n                      <th scope=\"col\">Addr</th>\n                      <th scope=\"col\">N</th>\n                      <th scope=\"col\">Spent</th>\n                      <th scope=\"col\">Type</th>\n                      <th scope=\"col\">TX Index</th>\n                      <th scope=\"col\">Value</th>\n                    </tr>\n                  </thead>\n                  {this.state.tx.length > 0 ? (\n                    <tbody>\n                      {this.state.tx.map((val, ind) => {\n                        return (\n                          <tr key={ind}>\n                            <th>\n                              {val.script.slice(0, 4) +\n                                \"...\" +\n                                val.script.slice(\n                                  val.script.length - 4,\n                                  val.script.length\n                                )}\n                            </th>\n                            <td>\n                              {\" \"}\n                              {val.addr.slice(0, 4) +\n                                \"...\" +\n                                val.addr.slice(\n                                  val.addr.length - 4,\n                                  val.addr.length\n                                )}\n                            </td>\n                            <td>{val.n}</td>\n                            <td>{JSON.stringify(val.spent)}</td>\n                            <td>{val.type}</td>\n                            <td>{val.tx_index}</td>\n                            <td>{val.value}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  ) : (\n                    \"\"\n                  )}\n                </table>\n\n                <div style={{ textAlign: \"left\" }}>\n                  <h3>Inputs</h3>\n                </div>\n                <table className=\"table\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Script</th>\n                      <th scope=\"col\">Sequence</th>\n                      <th scope=\"col\">Prv.Out Script</th>\n                      <th scope=\"col\">Prv.Out Addr</th>\n                      <th scope=\"col\">Prv.Out N</th>\n                      <th scope=\"col\">Prv.Out Spent</th>\n                      <th scope=\"col\">Prv.Out Type</th>\n                      <th scope=\"col\">Prv.Out TX Index</th>\n                      <th scope=\"col\">Prv.Out Value</th>\n                    </tr>\n                  </thead>\n                  {this.state.tx2.length > 0 ? (\n                    <tbody>\n                      {this.state.tx2.map((val, ind) => {\n                        return (\n                          <tr key={ind}>\n                            <th>\n                              {val.script.slice(0, 4) +\n                                \"...\" +\n                                val.script.slice(\n                                  val.script.length - 4,\n                                  val.script.length\n                                )}\n                            </th>\n                            <td>{val.sequence}</td>\n                            <td>\n                              {\" \"}\n                              {val.prev_out.script.slice(0, 4) +\n                                \"...\" +\n                                val.prev_out.script.slice(\n                                  val.prev_out.script.length - 4,\n                                  val.prev_out.script.length\n                                )}\n                            </td>\n                            <td>\n                              {\" \"}\n                              {val.prev_out.addr.slice(0, 4) +\n                                \"...\" +\n                                val.prev_out.addr.slice(\n                                  val.prev_out.addr.length - 4,\n                                  val.prev_out.addr.length\n                                )}\n                            </td>\n                            <td>{val.prev_out.n}</td>\n                            <td>{JSON.stringify(val.prev_out.spent)}</td>\n                            <td>{val.prev_out.type}</td>\n                            <td>{val.prev_out.tx_index}</td>\n                            <td>{val.prev_out.value}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  ) : (\n                    \"\"\n                  )}\n                </table>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      tx: [],\n      tx2: [],\n      datalength: 0,\n      show: false\n    };\n  }\n\n  get = () => {\n    axios\n      .get(`https://blockchain.info/latestblock?cors=true`)\n      .then(response => {\n        this.setState({\n          data: response.data,\n          tx: response.data.txIndexes,\n          tx2:\n            response.data.txIndexes.length > 10\n              ? response.data.txIndexes.slice(0, 10)\n              : response.data.txIndexes,\n          datalength:\n            response.data.txIndexes.length > 10\n              ? 10\n              : response.data.txIndexes.length,\n          show: true\n        });\n      })\n      .catch(error => {\n        this.setState({\n          data: {},\n          tx: [],\n          tx2: [],\n          datalength: 0,\n          show: false\n        });\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\" style={{ width: \"90%\", margin: \"0 auto\" }}>\n        <div style={{ margin: \"5% 0%\" }}>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-append\">\n              <button\n                onClick={() => {\n                  this.get();\n                }}\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                id=\"button-addon2\"\n              >\n                Get Details\n              </button>\n            </div>{\" \"}\n          </div>\n\n          {this.state.show ? (\n            <div className=\"row\">\n              <div className=\"col-md-4 col-sm-12\">\n                <div style={{ textAlign: \"left\" }}>\n                  <h3>Latest Block</h3>\n                </div>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}>Block Index</span>\n                    <span>{this.state.data.block_index}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Height</span>\n                    <span>{this.state.data.height}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Time</span>\n                    <span>{this.state.data.time}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span style={{ fontWeight: \"bold\" }}> Hash</span>\n                    {this.state.data.hash !== undefined ? (\n                      <span>\n                        {this.state.data.hash.slice(0, 4)}...\n                        {this.state.data.hash.slice(\n                          this.state.data.hash.length - 4,\n                          this.state.data.hash.length\n                        )}\n                      </span>\n                    ) : (\n                      <span />\n                    )}\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-8 col-sm-12\">\n                <div style={{ textAlign: \"left\" }}>\n                  <h3>TX Indexes</h3>\n                </div>\n                <table className=\"table\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">TX Indexes</th>\n                    </tr>\n                  </thead>\n                  {this.state.tx2.length > 0 ? (\n                    <tbody>\n                      {this.state.tx2.map((val, ind) => {\n                        return (\n                          <tr key={ind}>\n                            <td>{ind}</td>\n                            <td>{val}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  ) : (\n                    \"\"\n                  )}\n                  <div className=\"input-group-append\">\n                    <button\n                      onClick={() => {\n                        this.setState({\n                          tx2: this.state.tx.slice(\n                            0,\n                            this.state.datalength + 10\n                          ),\n                          datalength: this.state.datalength + 10\n                        });\n                      }}\n                      className=\"btn btn-outline-secondary\"\n                      type=\"button\"\n                      id=\"button-addon2\"\n                    >\n                      Load More\n                    </button>\n                  </div>\n                </table>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./App.css\";\nimport Block from \"./Block\";\nimport Txhash from \"./Txhash\";\nimport LatestBlock from \"./LatestBlock\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      nextblock: \"\",\n      tx: [],\n      hash: \"\",\n      show: false\n    };\n  }\n  componentDidMount() {\n    // this.get();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ width: \"90%\", margin: \"0 auto\" }}>\n        <div style={{ margin: \"5% 0%\", textAlign: 'left' }}>\n          <h4>Blockchain.info API's</h4>\n        </div>\n        <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link active\"\n              id=\"home-tab\"\n              data-toggle=\"tab\"\n              href=\"#home\"\n              role=\"tab\"\n              aria-controls=\"home\"\n              aria-selected=\"true\"\n            >\n            Raw Block\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              id=\"profile-tab\"\n              data-toggle=\"tab\"\n              href=\"#profile\"\n              role=\"tab\"\n              aria-controls=\"profile\"\n              aria-selected=\"false\"\n            >\n            TX Block\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              id=\"contact-tab\"\n              data-toggle=\"tab\"\n              href=\"#contact\"\n              role=\"tab\"\n              aria-controls=\"contact\"\n              aria-selected=\"false\"\n            >\n              Latest Block\n            </a>\n          </li>\n        </ul>\n        <div className=\"tab-content\" id=\"myTabContent\">\n          <div\n            className=\"tab-pane fade show active\"\n            id=\"home\"\n            role=\"tabpanel\"\n            aria-labelledby=\"home-tab\"\n          >\n            <Block />\n          </div>\n          <div\n            className=\"tab-pane fade\"\n            id=\"profile\"\n            role=\"tabpanel\"\n            aria-labelledby=\"profile-tab\"\n          >\n            <Txhash />\n          </div>\n          <div\n            className=\"tab-pane fade\"\n            id=\"contact\"\n            role=\"tabpanel\"\n            aria-labelledby=\"contact-tab\"\n          >\n            <LatestBlock />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}